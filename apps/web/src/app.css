@import 'tailwindcss/base';
@import 'tailwindcss/components';
@import 'tailwindcss/utilities';
@import '@fontsource/fira-mono';

:root {
	--font-body:
		Arial, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell,
		'Open Sans', 'Helvetica Neue', sans-serif;
	--font-mono: 'Fira Mono', monospace;
	font-family: var(--font-body), serif;
}

/* Basic TipTap editor styles */
.ProseMirror {
	min-height: 150px;
	outline: none;
}

.ProseMirror:focus {
	border-color: #3b82f6; /* blue-500 */
}

.ProseMirror > * + * {
	margin-top: 0.75em;
}

.ProseMirror ul,
.ProseMirror ol {
	padding: 0 1rem;
}

.ProseMirror h1,
.ProseMirror h2,
.ProseMirror h3,
.ProseMirror h4,
.ProseMirror h5,
.ProseMirror h6 {
	line-height: 1.1;
}

.ProseMirror code {
	background-color: rgba(97, 97, 97, 0.1);
	color: #616161;
}

.ProseMirror pre {
	background: #0d0d0d;
	color: #fff;
	padding: 0.75rem 1rem;
	border-radius: 0.5rem;
}

.ProseMirror pre code {
	color: inherit;
	padding: 0;
	background: none;
	font-size: 0.8rem;
}

.ProseMirror img {
	max-width: 100%;
	height: auto;
}

.ProseMirror blockquote {
	padding-left: 1rem;
	border-left: 2px solid rgba(13, 13, 13, 0.1);
}

.ProseMirror hr {
	border: none;
	border-top: 2px solid rgba(13, 13, 13, 0.1);
	margin: 2rem 0;
}

/* Task list specific styles */
.ProseMirror ul[data-type='taskList'] {
	list-style: none;
	padding: 0;
}

.ProseMirror ul[data-type='taskList'] li {
	display: flex;
	align-items: start;
}

.ProseMirror ul[data-type='taskList'] li > label {
	flex: 0 0 auto;
	margin-right: 0.5rem;
	user-select: none;
}

.ProseMirror ul[data-type='taskList'] li > div {
	flex: 1 1 auto;
}

.ProseMirror input[type='checkbox'] {
	/* Remove default checkbox appearance */
	appearance: none;
	-webkit-appearance: none;
	-moz-appearance: none;

	/* Define the size of the checkbox */
	width: 15px;
	height: 15px;

	/* Use Tailwind's default 'rounded' border-radius (0.25rem = 4px) */
	border-radius: 0.25rem;

	/* Add a border to make it visible */

	/* Optional: Background color when unchecked */
	background-color: #fff;

	/* Ensure itâ€™s aligned properly */
	vertical-align: middle;
	cursor: pointer;
}

/* Style when the checkbox is checked */
.ProseMirror input[type='checkbox']:checked {
	/* Change background color when checked */
	background-color: oklch(0.585 0.233 277.117); /* Blue as an example */

	/* Keep it relative for the ::after pseudo-element */
	position: relative;
}
