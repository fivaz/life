generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Event {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  startDate   DateTime  @db.Timestamp(6)
  endDate     DateTime  @db.Timestamp(6)
  isDone      Boolean
  deleted     DateTime? @db.Timestamp(6)
  userId      String
  categoryId  Int
  category    Category  @relation(fields: [categoryId], references: [id])
  user        User      @relation(fields: [userId], references: [id])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  Category      Category[]
  events        Event[]
  sessions      Session[]
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  isDefault Boolean
  color     String
  deleted   DateTime? @db.Timestamp(6)
  userId    String
  user      User      @relation(fields: [userId], references: [id])
  Event     Event[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
