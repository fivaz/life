generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Task {
  id                  Int       @id @default(autoincrement())
  name                String
  description         String?
  startDate           DateTime? @db.Timestamp(6)
  endDate             DateTime? @db.Timestamp(6)
  isDone              Boolean
  deleted             DateTime? @db.Timestamp(6)
  userId              String
  categoryId          Int
  duration            Int?
  isRecurring         Boolean
  recurringStartAt    DateTime? @db.Timestamp(6)
  recurringEndAt      DateTime? @db.Timestamp(6)
  recurringDaysOfWeek String[]
  category            Category  @relation(fields: [categoryId], references: [id])
  user                User      @relation(fields: [userId], references: [id])
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  userId    String
  isDefault Boolean
  deleted   DateTime? @db.Timestamp(6)
  color     String
  group     String
  user      User      @relation(fields: [userId], references: [id])
  Task      Task[]
}

model User {
  id           String     @id @default(cuid())
  auth_session Session[]
  key          Key[]
  username     String
  Category     Category[]
  tasks        Task[]
}

// TODO maybe Lucia doesn't accept autogenerated ids
model Session {
  id             String @id @default(cuid())
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  user           User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model Key {
  id              String  @id @unique
  hashed_password String?
  user_id         String
  user            User    @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}
